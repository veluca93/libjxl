// Copyright (c) the JPEG XL Project Authors. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
/* This file is automatically generated. Do not modify it directly. */
#if HWY_TARGET != HWY_NEON
#error "only include this file from fast_dct-inl.h"
#endif

constexpr size_t FastIDCTIntegerBits(FastDCTTag<16>) { return 1; }

void FastIDCT(FastDCTTag<16>, const float* in, size_t in_stride, float* out,
              size_t out_stride, size_t count) {
  JXL_ASSERT(count % 8 == 0);
  HWY_FULL(float) df;
  for (size_t i = 0; i < count; i += 8) {
    auto v0 = Load(df, in + in_stride * 0 + i);
    auto v1 = Load(df, in + in_stride * 8 + i);
    auto v2 = v0 + v1;
    auto v3 = Load(df, in + in_stride * 4 + i);
    auto v4_tmp = v3 * Set(df, 0.41421356237309515);
    auto v4 = v4_tmp + v3;
    auto v5 = Load(df, in + in_stride * 12 + i);
    auto v6 = v5 + v3;
    auto v7 = v4 + v6;
    auto v8 = v7 * Set(df, 0.541196100146197);
    auto v9 = v2 + v8;
    auto v10 = Load(df, in + in_stride * 2 + i);
    auto v11_tmp = v10 * Set(df, 0.41421356237309515);
    auto v11 = v11_tmp + v10;
    auto v12 = Load(df, in + in_stride * 10 + i);
    auto v13 = Load(df, in + in_stride * 6 + i);
    auto v14 = v12 + v13;
    auto v15 = v11 + v14;
    auto v16 = v13 + v10;
    auto v17 = v16 * Set(df, 0.7653668647301797);
    auto v18 = Load(df, in + in_stride * 14 + i);
    auto v19 = v18 + v12;
    auto v20 = v19 + v16;
    auto v21 = v20 * Set(df, 0.541196100146197);
    auto v22 = v17 + v21;
    auto v23 = v15 + v22;
    auto v24 = v23 * Set(df, 0.5097955791041591);
    auto v25 = v9 + v24;
    auto v26 = Load(df, in + in_stride * 1 + i);
    auto v27_tmp = v26 * Set(df, 0.41421356237309515);
    auto v27 = v27_tmp + v26;
    auto v28 = Load(df, in + in_stride * 9 + i);
    auto v29 = Load(df, in + in_stride * 7 + i);
    auto v30 = v28 + v29;
    auto v31 = v27 + v30;
    auto v32 = Load(df, in + in_stride * 13 + i);
    auto v33 = Load(df, in + in_stride * 11 + i);
    auto v34 = v32 + v33;
    auto v35 = Load(df, in + in_stride * 5 + i);
    auto v36 = Load(df, in + in_stride * 3 + i);
    auto v37 = v35 + v36;
    auto v38 = v34 + v37;
    auto v39 = v38 * Set(df, 0.541196100146197);
    auto v40 = v37 * Set(df, 0.7653668647301797);
    auto v41 = v39 + v40;
    auto v42 = v31 + v41;
    auto v43 = v29 + v35;
    auto v44 = v36 + v26;
    auto v45 = v43 + v44;
    auto v46 = v45 * Set(df, 0.7653668647301797);
    auto v47 = v33 + v28;
    auto v48 = Load(df, in + in_stride * 15 + i);
    auto v49 = v48 + v32;
    auto v50 = v47 + v49;
    auto v51 = v50 + v45;
    auto v52 = v51 * Set(df, 0.541196100146197);
    auto v53 = v46 + v52;
    auto v54 = v53 * Set(df, 0.5097955791041592);
    auto v55_tmp = v44 * Set(df, 0.41421356237309515);
    auto v55 = v55_tmp + v44;
    auto v56 = v47 + v43;
    auto v57 = v55 + v56;
    auto v58 = v57 * Set(df, 0.5097955791041593);
    auto v59 = v54 + v58;
    auto v60 = v42 + v59;
    auto v61 = v60 * Set(df, 0.5024192861881557);
    auto v62 = v25 + v61;
    auto v63 = v55 - v56;
    auto v64 = v63 * Set(df, 0.6013448869350453);
    auto v65 = v45 * Set(df, 0.414213562373095);
    auto v66 = v65 - v50;
    auto v67 = v66 * Set(df, 0.7856949583871021);
    auto v68 = v64 + v67;
    auto v69 = v27 - v30;
    auto v70 = v37 * Set(df, 0.541196100146197);
    auto v71_tmp = v34 * Set(df, 0.30656296487637635);
    auto v71 = v71_tmp + v34;
    auto v72 = v70 - v71;
    auto v73 = v69 + v72;
    auto v74 = v68 + v73;
    auto v75 = v74 * Set(df, 0.5224986149396889);
    auto v76 = v0 - v1;
    auto v77 = v4 - v6;
    auto v78_tmp = v77 * Set(df, 0.30656296487637635);
    auto v78 = v78_tmp + v77;
    auto v79 = v76 + v78;
    auto v80 = v11 - v14;
    auto v81 = v16 * Set(df, 0.5411961001461972);
    auto v82_tmp = v19 * Set(df, 0.30656296487637613);
    auto v82 = v82_tmp + v19;
    auto v83 = v81 - v82;
    auto v84 = v80 + v83;
    auto v85 = v84 * Set(df, 0.6013448869350453);
    auto v86 = v79 + v85;
    auto v87 = v75 + v86;
    auto v88 = v76 - v78;
    auto v89 = v80 - v83;
    auto v90 = v89 * Set(df, 0.8999762231364156);
    auto v91 = v88 + v90;
    auto v92 = v69 - v72;
    auto v93 = v63 * Set(df, 0.8999762231364156);
    auto v94_tmp = v66 * Set(df, 0.1758756024193584);
    auto v94 = v94_tmp + v66;
    auto v95 = v93 - v94;
    auto v96 = v92 + v95;
    auto v97 = v96 * Set(df, 0.5669440348163577);
    auto v98 = v91 + v97;
    auto v99 = v2 - v8;
    auto v100 = v15 - v22;
    auto v101_tmp = v100 * Set(df, 0.5629154477415055);
    auto v101 = MulAdd(v100, Set(df, 2), v101_tmp);
    auto v102 = v99 + v101;
    auto v103 = v31 - v41;
    auto v104 = v57 - v53;
    auto v105_tmp = v104 * Set(df, 0.5629154477415055);
    auto v105 = MulAdd(v104, Set(df, 2), v105_tmp);
    auto v106 = v103 + v105;
    auto v107 = v106 * Set(df, 0.6468217833599901);
    auto v108 = v102 + v107;
    auto v109 = v99 - v101;
    auto v110 = v103 - v105;
    auto v111 = v110 * Set(df, 0.7881546234512502);
    auto v112 = v109 + v111;
    auto v113 = v88 - v90;
    auto v114 = v92 - v95;
    auto v115_tmp = v114 * Set(df, 0.06067768599034706);
    auto v115 = v115_tmp + v114;
    auto v116 = v113 + v115;
    auto v117 = v79 - v85;
    auto v118 = v73 - v68;
    auto v119_tmp = v118 * Set(df, 0.7224470982383342);
    auto v119 = v119_tmp + v118;
    auto v120 = v117 + v119;
    auto v121 = v9 - v24;
    auto v122 = v42 - v59;
    auto v123_tmp = v122 * Set(df, 0.10114861868915526);
    auto v123 = MulAdd(v122, Set(df, 5), v123_tmp);
    auto v124 = v121 + v123;
    auto v125 = v121 - v123;
    auto v126 = v117 - v119;
    auto v127 = v113 - v115;
    auto v128 = v109 - v111;
    auto v129 = v102 - v107;
    auto v130 = v91 - v97;
    auto v131 = v86 - v75;
    auto v132 = v25 - v61;
    Store(v62, df, out + out_stride * 0 + i);
    Store(v87, df, out + out_stride * 1 + i);
    Store(v98, df, out + out_stride * 2 + i);
    Store(v108, df, out + out_stride * 3 + i);
    Store(v112, df, out + out_stride * 4 + i);
    Store(v116, df, out + out_stride * 5 + i);
    Store(v120, df, out + out_stride * 6 + i);
    Store(v124, df, out + out_stride * 7 + i);
    Store(v125, df, out + out_stride * 8 + i);
    Store(v126, df, out + out_stride * 9 + i);
    Store(v127, df, out + out_stride * 10 + i);
    Store(v128, df, out + out_stride * 11 + i);
    Store(v129, df, out + out_stride * 12 + i);
    Store(v130, df, out + out_stride * 13 + i);
    Store(v131, df, out + out_stride * 14 + i);
    Store(v132, df, out + out_stride * 15 + i);
  }
}
